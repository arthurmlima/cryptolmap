// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_module_set_hash_stream (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        m_perm,
        m_perm_ap_vld,
        hash_strm8_dout,
        hash_strm8_num_data_valid,
        hash_strm8_fifo_cap,
        hash_strm8_empty_n,
        hash_strm8_read,
        end_hash_strm9_dout,
        end_hash_strm9_num_data_valid,
        end_hash_strm9_fifo_cap,
        end_hash_strm9_empty_n,
        end_hash_strm9_read,
        ap_return
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_state8 = 13'd128;
parameter    ap_ST_fsm_state9 = 13'd256;
parameter    ap_ST_fsm_state10 = 13'd512;
parameter    ap_ST_fsm_state11 = 13'd1024;
parameter    ap_ST_fsm_state12 = 13'd2048;
parameter    ap_ST_fsm_state13 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [31:0] m_perm;
output   m_perm_ap_vld;
input  [255:0] hash_strm8_dout;
input  [1:0] hash_strm8_num_data_valid;
input  [1:0] hash_strm8_fifo_cap;
input   hash_strm8_empty_n;
output   hash_strm8_read;
input  [0:0] end_hash_strm9_dout;
input  [1:0] end_hash_strm9_num_data_valid;
input  [1:0] end_hash_strm9_fifo_cap;
input   end_hash_strm9_empty_n;
output   end_hash_strm9_read;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] m_perm;
reg m_perm_ap_vld;
reg hash_strm8_read;
reg end_hash_strm9_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    hash_strm8_blk_n;
reg   [255:0] h256_V_reg_134;
wire    ap_CS_fsm_state4;
wire   [31:0] grp_fu_95_p1;
reg   [31:0] conv_reg_150;
wire    ap_CS_fsm_state5;
wire   [31:0] grp_fu_98_p1;
reg   [31:0] conv1_reg_155;
wire   [31:0] grp_fu_85_p2;
reg   [31:0] div_reg_160;
wire    ap_CS_fsm_state11;
wire   [31:0] grp_fu_90_p2;
reg   [31:0] div1_reg_165;
wire    grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57_ap_start;
wire    grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57_ap_done;
wire    grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57_ap_idle;
wire    grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57_ap_ready;
wire    grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57_end_hash_strm9_read;
wire    grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_ap_start;
wire    grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_ap_done;
wire    grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_ap_idle;
wire    grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_ap_ready;
wire   [11:0] grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_aux_perm_out;
wire    grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_aux_perm_out_ap_vld;
wire    grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_ap_start;
wire    grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_ap_done;
wire    grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_ap_idle;
wire    grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_ap_ready;
wire   [11:0] grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_aux_diff_out;
wire    grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_aux_diff_out_ap_vld;
reg    grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_ap_start_reg;
reg    grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_ap_start_reg;
reg    ap_block_state1;
wire   [31:0] bitcast_ln54_fu_117_p1;
reg   [31:0] m_perm_preg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state6;
wire   [31:0] grp_fu_95_p0;
wire   [31:0] grp_fu_98_p0;
wire   [31:0] grp_fu_75_p2;
wire   [31:0] grp_fu_80_p2;
reg   [12:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_block_state3_on_subcall_done;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 13'd1;
#0 grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57_ap_start_reg = 1'b0;
#0 grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_ap_start_reg = 1'b0;
#0 grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_ap_start_reg = 1'b0;
#0 m_perm_preg = 32'd0;
end

top_module_set_hash_stream_Pipeline_VITIS_LOOP_40_1 grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57_ap_start),
    .ap_done(grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57_ap_done),
    .ap_idle(grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57_ap_idle),
    .ap_ready(grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57_ap_ready),
    .end_hash_strm9_dout(end_hash_strm9_dout),
    .end_hash_strm9_num_data_valid(2'd0),
    .end_hash_strm9_fifo_cap(2'd0),
    .end_hash_strm9_empty_n(end_hash_strm9_empty_n),
    .end_hash_strm9_read(grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57_end_hash_strm9_read)
);

top_module_set_hash_stream_Pipeline_VITIS_LOOP_44_2 grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_ap_start),
    .ap_done(grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_ap_done),
    .ap_idle(grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_ap_idle),
    .ap_ready(grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_ap_ready),
    .h256_V(h256_V_reg_134),
    .aux_perm_out(grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_aux_perm_out),
    .aux_perm_out_ap_vld(grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_aux_perm_out_ap_vld)
);

top_module_set_hash_stream_Pipeline_VITIS_LOOP_49_3 grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_ap_start),
    .ap_done(grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_ap_done),
    .ap_idle(grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_ap_idle),
    .ap_ready(grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_ap_ready),
    .h256_V(h256_V_reg_134),
    .aux_diff_out(grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_aux_diff_out),
    .aux_diff_out_ap_vld(grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_aux_diff_out_ap_vld)
);

top_module_fadd_32ns_32ns_32_2_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_2_full_dsp_1_U177(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(div_reg_160),
    .din1(32'd1050253722),
    .ce(1'b1),
    .dout(grp_fu_75_p2)
);

top_module_fadd_32ns_32ns_32_2_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_2_full_dsp_1_U178(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(div1_reg_165),
    .din1(32'd1036831949),
    .ce(1'b1),
    .dout(grp_fu_80_p2)
);

top_module_fdiv_32ns_32ns_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_6_no_dsp_1_U179(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_reg_150),
    .din1(32'd1182400512),
    .ce(1'b1),
    .dout(grp_fu_85_p2)
);

top_module_fdiv_32ns_32ns_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_6_no_dsp_1_U180(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_reg_155),
    .din1(32'd1182400512),
    .ce(1'b1),
    .dout(grp_fu_90_p2)
);

top_module_uitofp_32ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_2_no_dsp_1_U181(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_95_p0),
    .ce(1'b1),
    .dout(grp_fu_95_p1)
);

top_module_uitofp_32ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_2_no_dsp_1_U182(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_98_p0),
    .ce(1'b1),
    .dout(grp_fu_98_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57_ap_start_reg <= 1'b1;
        end else if ((grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57_ap_ready == 1'b1)) begin
            grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_ap_start_reg <= 1'b1;
        end else if ((grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_ap_ready == 1'b1)) begin
            grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_ap_start_reg <= 1'b1;
        end else if ((grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_ap_ready == 1'b1)) begin
            grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        m_perm_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            m_perm_preg <= bitcast_ln54_fu_117_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        conv1_reg_155 <= grp_fu_98_p1;
        conv_reg_150 <= grp_fu_95_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        div1_reg_165 <= grp_fu_90_p2;
        div_reg_160 <= grp_fu_85_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        h256_V_reg_134 <= hash_strm8_dout;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if (((hash_strm8_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state3_on_subcall_done)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        end_hash_strm9_read = grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57_end_hash_strm9_read;
    end else begin
        end_hash_strm9_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hash_strm8_blk_n = hash_strm8_empty_n;
    end else begin
        hash_strm8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((hash_strm8_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hash_strm8_read = 1'b1;
    end else begin
        hash_strm8_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        m_perm = bitcast_ln54_fu_117_p1;
    end else begin
        m_perm = m_perm_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        m_perm_ap_vld = 1'b1;
    end else begin
        m_perm_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((hash_strm8_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state1 = ((hash_strm8_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state3_on_subcall_done = ((grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_ap_done == 1'b0) | (grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57_ap_done == 1'b0) | (grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_ap_done == 1'b0));
end

assign ap_return = grp_fu_80_p2;

assign bitcast_ln54_fu_117_p1 = grp_fu_75_p2;

assign grp_fu_95_p0 = grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_aux_perm_out;

assign grp_fu_98_p0 = grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_aux_diff_out;

assign grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57_ap_start = grp_set_hash_stream_Pipeline_VITIS_LOOP_40_1_fu_57_ap_start_reg;

assign grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_ap_start = grp_set_hash_stream_Pipeline_VITIS_LOOP_44_2_fu_63_ap_start_reg;

assign grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_ap_start = grp_set_hash_stream_Pipeline_VITIS_LOOP_49_3_fu_69_ap_start_reg;

endmodule //top_module_set_hash_stream
