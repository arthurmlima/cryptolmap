// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_module_logmap (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        output_stream_TDATA,
        output_stream_TVALID,
        output_stream_TREADY,
        output_stream_TKEEP,
        output_stream_TSTRB,
        output_stream_TUSER,
        output_stream_TLAST,
        output_stream_TID,
        output_stream_TDEST,
        u_diff_dout,
        u_diff_num_data_valid,
        u_diff_fifo_cap,
        u_diff_empty_n,
        u_diff_read
);

parameter    ap_ST_fsm_state1 = 58'd1;
parameter    ap_ST_fsm_state2 = 58'd2;
parameter    ap_ST_fsm_state3 = 58'd4;
parameter    ap_ST_fsm_state4 = 58'd8;
parameter    ap_ST_fsm_state5 = 58'd16;
parameter    ap_ST_fsm_state6 = 58'd32;
parameter    ap_ST_fsm_state7 = 58'd64;
parameter    ap_ST_fsm_state8 = 58'd128;
parameter    ap_ST_fsm_state9 = 58'd256;
parameter    ap_ST_fsm_state10 = 58'd512;
parameter    ap_ST_fsm_state11 = 58'd1024;
parameter    ap_ST_fsm_state12 = 58'd2048;
parameter    ap_ST_fsm_state13 = 58'd4096;
parameter    ap_ST_fsm_state14 = 58'd8192;
parameter    ap_ST_fsm_state15 = 58'd16384;
parameter    ap_ST_fsm_state16 = 58'd32768;
parameter    ap_ST_fsm_state17 = 58'd65536;
parameter    ap_ST_fsm_state18 = 58'd131072;
parameter    ap_ST_fsm_state19 = 58'd262144;
parameter    ap_ST_fsm_state20 = 58'd524288;
parameter    ap_ST_fsm_state21 = 58'd1048576;
parameter    ap_ST_fsm_state22 = 58'd2097152;
parameter    ap_ST_fsm_state23 = 58'd4194304;
parameter    ap_ST_fsm_state24 = 58'd8388608;
parameter    ap_ST_fsm_state25 = 58'd16777216;
parameter    ap_ST_fsm_state26 = 58'd33554432;
parameter    ap_ST_fsm_state27 = 58'd67108864;
parameter    ap_ST_fsm_state28 = 58'd134217728;
parameter    ap_ST_fsm_state29 = 58'd268435456;
parameter    ap_ST_fsm_state30 = 58'd536870912;
parameter    ap_ST_fsm_state31 = 58'd1073741824;
parameter    ap_ST_fsm_state32 = 58'd2147483648;
parameter    ap_ST_fsm_state33 = 58'd4294967296;
parameter    ap_ST_fsm_state34 = 58'd8589934592;
parameter    ap_ST_fsm_state35 = 58'd17179869184;
parameter    ap_ST_fsm_state36 = 58'd34359738368;
parameter    ap_ST_fsm_state37 = 58'd68719476736;
parameter    ap_ST_fsm_state38 = 58'd137438953472;
parameter    ap_ST_fsm_state39 = 58'd274877906944;
parameter    ap_ST_fsm_state40 = 58'd549755813888;
parameter    ap_ST_fsm_state41 = 58'd1099511627776;
parameter    ap_ST_fsm_state42 = 58'd2199023255552;
parameter    ap_ST_fsm_state43 = 58'd4398046511104;
parameter    ap_ST_fsm_state44 = 58'd8796093022208;
parameter    ap_ST_fsm_state45 = 58'd17592186044416;
parameter    ap_ST_fsm_state46 = 58'd35184372088832;
parameter    ap_ST_fsm_state47 = 58'd70368744177664;
parameter    ap_ST_fsm_state48 = 58'd140737488355328;
parameter    ap_ST_fsm_state49 = 58'd281474976710656;
parameter    ap_ST_fsm_state50 = 58'd562949953421312;
parameter    ap_ST_fsm_state51 = 58'd1125899906842624;
parameter    ap_ST_fsm_state52 = 58'd2251799813685248;
parameter    ap_ST_fsm_state53 = 58'd4503599627370496;
parameter    ap_ST_fsm_state54 = 58'd9007199254740992;
parameter    ap_ST_fsm_state55 = 58'd18014398509481984;
parameter    ap_ST_fsm_state56 = 58'd36028797018963968;
parameter    ap_ST_fsm_state57 = 58'd72057594037927936;
parameter    ap_ST_fsm_state58 = 58'd144115188075855872;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] p_read;
output  [31:0] output_stream_TDATA;
output   output_stream_TVALID;
input   output_stream_TREADY;
output  [3:0] output_stream_TKEEP;
output  [3:0] output_stream_TSTRB;
output  [0:0] output_stream_TUSER;
output  [0:0] output_stream_TLAST;
output  [0:0] output_stream_TID;
output  [0:0] output_stream_TDEST;
input  [31:0] u_diff_dout;
input  [3:0] u_diff_num_data_valid;
input  [3:0] u_diff_fifo_cap;
input   u_diff_empty_n;
output   u_diff_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg u_diff_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [57:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    output_stream_TDATA_blk_n;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state58;
reg    u_diff_blk_n;
wire   [63:0] grp_fu_258_p1;
reg   [63:0] reg_291;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln80_fu_358_p2;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state42;
wire   [63:0] grp_fu_274_p2;
reg   [63:0] reg_297;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state50;
wire   [63:0] grp_fu_267_p2;
reg   [63:0] reg_304;
wire    ap_CS_fsm_state25;
wire   [63:0] grp_generic_modf_double_s_fu_223_ap_return;
reg   [63:0] reg_311;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state51;
wire   [31:0] grp_pow_generic_float_s_fu_204_ap_return;
reg   [31:0] reg_316;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state41;
wire   [63:0] grp_fu_261_p1;
reg   [63:0] reg_322;
wire   [63:0] grp_fu_279_p2;
reg   [63:0] reg_327;
wire   [63:0] grp_fu_287_p1;
reg   [63:0] uu_diff_reg_613;
wire    ap_CS_fsm_state2;
wire   [0:0] outHash_last_V_fu_415_p2;
reg   [0:0] outHash_last_V_reg_650;
wire    ap_CS_fsm_state28;
wire   [0:0] icmp_ln91_fu_403_p2;
wire   [63:0] conv3_fu_264_p1;
reg   [63:0] conv3_reg_658;
wire   [63:0] grp_fu_283_p2;
reg   [63:0] mul4_reg_663;
wire   [63:0] grp_generic_modf_double_s_fu_230_ap_return;
reg   [63:0] call_ret_reg_668;
wire   [31:0] grp_fu_252_p1;
reg   [31:0] x_diff_3_reg_673;
wire    ap_CS_fsm_state52;
wire   [31:0] y_diff_fu_255_p1;
reg   [31:0] y_diff_reg_678;
wire   [30:0] trunc_ln368_fu_448_p1;
reg   [30:0] trunc_ln368_reg_683;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state55;
wire   [31:0] grp_fu_246_p2;
reg   [31:0] p_reg_693;
wire    ap_CS_fsm_state56;
wire    grp_pow_generic_float_s_fu_204_ap_start;
wire    grp_pow_generic_float_s_fu_204_ap_done;
wire    grp_pow_generic_float_s_fu_204_ap_idle;
wire    grp_pow_generic_float_s_fu_204_ap_ready;
reg    grp_pow_generic_float_s_fu_204_ap_ce;
reg   [31:0] grp_pow_generic_float_s_fu_204_base_r;
wire    grp_generic_modf_double_s_fu_223_ap_done;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    grp_generic_modf_double_s_fu_223_ap_start;
wire    grp_generic_modf_double_s_fu_223_ap_idle;
wire    grp_generic_modf_double_s_fu_223_ap_ready;
reg   [63:0] grp_generic_modf_double_s_fu_223_x;
wire    grp_generic_modf_double_s_fu_230_ap_start;
wire    grp_generic_modf_double_s_fu_230_ap_done;
wire    grp_generic_modf_double_s_fu_230_ap_idle;
wire    grp_generic_modf_double_s_fu_230_ap_ready;
wire    grp_generic_remainder_float_s_fu_237_ap_start;
wire    grp_generic_remainder_float_s_fu_237_ap_done;
wire    grp_generic_remainder_float_s_fu_237_ap_idle;
wire    grp_generic_remainder_float_s_fu_237_ap_ready;
wire   [31:0] grp_generic_remainder_float_s_fu_237_ap_return;
reg    grp_pow_generic_float_s_fu_204_ap_start_reg;
reg   [57:0] ap_NS_fsm;
wire    ap_NS_fsm_state4;
wire    ap_NS_fsm_state29;
reg    grp_generic_modf_double_s_fu_223_ap_start_reg;
reg    grp_generic_modf_double_s_fu_230_ap_start_reg;
reg    grp_generic_remainder_float_s_fu_237_ap_start_reg;
reg   [3:0] i_fu_138;
wire   [3:0] i_8_fu_364_p2;
reg    ap_block_state1;
reg   [31:0] y_diff_2_fu_142;
wire    ap_CS_fsm_state27;
reg   [31:0] x_diff_1_fu_146;
reg   [31:0] y_diff_3_fu_150;
reg   [31:0] x_diff_2_fu_154;
reg   [18:0] i_5_fu_158;
wire   [18:0] i_10_fu_409_p2;
wire    regslice_both_output_stream_V_data_V_U_apdone_blk;
wire    ap_CS_fsm_state53;
wire   [31:0] grp_fu_246_p0;
reg   [31:0] grp_fu_258_p0;
reg   [31:0] grp_fu_261_p0;
reg   [63:0] grp_fu_267_p0;
reg   [63:0] grp_fu_267_p1;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state47;
reg   [63:0] grp_fu_274_p0;
reg   [63:0] grp_fu_274_p1;
wire    ap_CS_fsm_state18;
wire   [31:0] grp_fu_242_p2;
wire   [31:0] data_V_fu_444_p1;
wire   [31:0] p_Result_s_fu_452_p3;
wire   [31:0] data_V_1_fu_464_p1;
wire   [22:0] p_Result_16_fu_478_p1;
wire   [24:0] mantissa_fu_482_p4;
wire   [7:0] xs_exp_V_fu_468_p4;
wire   [8:0] zext_ln346_fu_496_p1;
wire   [8:0] add_ln346_fu_500_p2;
wire   [7:0] sub_ln1512_fu_514_p2;
wire   [0:0] isNeg_fu_506_p3;
wire  signed [8:0] sext_ln1512_fu_520_p1;
wire   [8:0] ush_fu_524_p3;
wire  signed [31:0] sext_ln1488_fu_532_p1;
wire   [54:0] zext_ln68_fu_492_p1;
wire   [54:0] zext_ln1488_fu_536_p1;
wire   [54:0] r_V_fu_540_p2;
wire   [0:0] tmp_fu_552_p3;
wire   [54:0] r_V_14_fu_546_p2;
wire   [7:0] zext_ln818_fu_560_p1;
wire   [7:0] tmp_29_fu_564_p4;
wire   [7:0] val_fu_574_p3;
reg    grp_fu_287_ce;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
reg    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
reg    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
reg    ap_block_state51_on_subcall_done;
reg    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
reg    ap_ST_fsm_state57_blk;
reg    ap_ST_fsm_state58_blk;
wire   [31:0] output_stream_TDATA_int_regslice;
reg    output_stream_TVALID_int_regslice;
wire    output_stream_TREADY_int_regslice;
wire    regslice_both_output_stream_V_data_V_U_vld_out;
wire    regslice_both_output_stream_V_keep_V_U_apdone_blk;
wire    regslice_both_output_stream_V_keep_V_U_ack_in_dummy;
wire    regslice_both_output_stream_V_keep_V_U_vld_out;
wire    regslice_both_output_stream_V_strb_V_U_apdone_blk;
wire    regslice_both_output_stream_V_strb_V_U_ack_in_dummy;
wire    regslice_both_output_stream_V_strb_V_U_vld_out;
wire    regslice_both_output_stream_V_user_V_U_apdone_blk;
wire    regslice_both_output_stream_V_user_V_U_ack_in_dummy;
wire    regslice_both_output_stream_V_user_V_U_vld_out;
wire    regslice_both_output_stream_V_last_V_U_apdone_blk;
wire    regslice_both_output_stream_V_last_V_U_ack_in_dummy;
wire    regslice_both_output_stream_V_last_V_U_vld_out;
wire    regslice_both_output_stream_V_id_V_U_apdone_blk;
wire    regslice_both_output_stream_V_id_V_U_ack_in_dummy;
wire    regslice_both_output_stream_V_id_V_U_vld_out;
wire    regslice_both_output_stream_V_dest_V_U_apdone_blk;
wire    regslice_both_output_stream_V_dest_V_U_ack_in_dummy;
wire    regslice_both_output_stream_V_dest_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 58'd1;
#0 grp_pow_generic_float_s_fu_204_ap_start_reg = 1'b0;
#0 grp_generic_modf_double_s_fu_223_ap_start_reg = 1'b0;
#0 grp_generic_modf_double_s_fu_230_ap_start_reg = 1'b0;
#0 grp_generic_remainder_float_s_fu_237_ap_start_reg = 1'b0;
end

top_module_pow_generic_float_s grp_pow_generic_float_s_fu_204(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pow_generic_float_s_fu_204_ap_start),
    .ap_done(grp_pow_generic_float_s_fu_204_ap_done),
    .ap_idle(grp_pow_generic_float_s_fu_204_ap_idle),
    .ap_ready(grp_pow_generic_float_s_fu_204_ap_ready),
    .ap_ce(grp_pow_generic_float_s_fu_204_ap_ce),
    .base_r(grp_pow_generic_float_s_fu_204_base_r),
    .ap_return(grp_pow_generic_float_s_fu_204_ap_return)
);

top_module_generic_modf_double_s grp_generic_modf_double_s_fu_223(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_modf_double_s_fu_223_ap_start),
    .ap_done(grp_generic_modf_double_s_fu_223_ap_done),
    .ap_idle(grp_generic_modf_double_s_fu_223_ap_idle),
    .ap_ready(grp_generic_modf_double_s_fu_223_ap_ready),
    .x(grp_generic_modf_double_s_fu_223_x),
    .ap_return(grp_generic_modf_double_s_fu_223_ap_return)
);

top_module_generic_modf_double_s grp_generic_modf_double_s_fu_230(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_modf_double_s_fu_230_ap_start),
    .ap_done(grp_generic_modf_double_s_fu_230_ap_done),
    .ap_idle(grp_generic_modf_double_s_fu_230_ap_idle),
    .ap_ready(grp_generic_modf_double_s_fu_230_ap_ready),
    .x(reg_304),
    .ap_return(grp_generic_modf_double_s_fu_230_ap_return)
);

top_module_generic_remainder_float_s grp_generic_remainder_float_s_fu_237(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_remainder_float_s_fu_237_ap_start),
    .ap_done(grp_generic_remainder_float_s_fu_237_ap_done),
    .ap_idle(grp_generic_remainder_float_s_fu_237_ap_idle),
    .ap_ready(grp_generic_remainder_float_s_fu_237_ap_ready),
    .x(p_reg_693),
    .ap_return(grp_generic_remainder_float_s_fu_237_ap_return)
);

top_module_fsub_32ns_32ns_32_2_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_2_full_dsp_1_U218(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x_diff_3_reg_673),
    .din1(y_diff_reg_678),
    .ce(1'b1),
    .dout(grp_fu_242_p2)
);

top_module_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U219(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_246_p0),
    .din1(32'd1203982336),
    .ce(1'b1),
    .dout(grp_fu_246_p2)
);

top_module_fptrunc_64ns_32_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fptrunc_64ns_32_1_no_dsp_1_U220(
    .din0(reg_311),
    .dout(grp_fu_252_p1)
);

top_module_fptrunc_64ns_32_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fptrunc_64ns_32_1_no_dsp_1_U221(
    .din0(call_ret_reg_668),
    .dout(y_diff_fu_255_p1)
);

top_module_fpext_32ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_1_no_dsp_1_U222(
    .din0(grp_fu_258_p0),
    .dout(grp_fu_258_p1)
);

top_module_fpext_32ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_1_no_dsp_1_U223(
    .din0(grp_fu_261_p0),
    .dout(grp_fu_261_p1)
);

top_module_fpext_32ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_1_no_dsp_1_U224(
    .din0(reg_316),
    .dout(conv3_fu_264_p1)
);

top_module_dsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsub_64ns_64ns_64_4_full_dsp_1_U225(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_267_p0),
    .din1(grp_fu_267_p1),
    .ce(1'b1),
    .dout(grp_fu_267_p2)
);

top_module_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U226(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_274_p0),
    .din1(grp_fu_274_p1),
    .ce(1'b1),
    .dout(grp_fu_274_p2)
);

top_module_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U227(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(uu_diff_reg_613),
    .din1(reg_322),
    .ce(1'b1),
    .dout(grp_fu_279_p2)
);

top_module_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U228(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(uu_diff_reg_613),
    .din1(conv3_reg_658),
    .ce(1'b1),
    .dout(grp_fu_283_p2)
);

top_module_sitodp_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32ns_64_2_no_dsp_1_U229(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(u_diff_dout),
    .ce(grp_fu_287_ce),
    .dout(grp_fu_287_p1)
);

top_module_regslice_both #(
    .DataWidth( 32 ))
regslice_both_output_stream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(output_stream_TDATA_int_regslice),
    .vld_in(output_stream_TVALID_int_regslice),
    .ack_in(output_stream_TREADY_int_regslice),
    .data_out(output_stream_TDATA),
    .vld_out(regslice_both_output_stream_V_data_V_U_vld_out),
    .ack_out(output_stream_TREADY),
    .apdone_blk(regslice_both_output_stream_V_data_V_U_apdone_blk)
);

top_module_regslice_both #(
    .DataWidth( 4 ))
regslice_both_output_stream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(4'd15),
    .vld_in(output_stream_TVALID_int_regslice),
    .ack_in(regslice_both_output_stream_V_keep_V_U_ack_in_dummy),
    .data_out(output_stream_TKEEP),
    .vld_out(regslice_both_output_stream_V_keep_V_U_vld_out),
    .ack_out(output_stream_TREADY),
    .apdone_blk(regslice_both_output_stream_V_keep_V_U_apdone_blk)
);

top_module_regslice_both #(
    .DataWidth( 4 ))
regslice_both_output_stream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(4'd15),
    .vld_in(output_stream_TVALID_int_regslice),
    .ack_in(regslice_both_output_stream_V_strb_V_U_ack_in_dummy),
    .data_out(output_stream_TSTRB),
    .vld_out(regslice_both_output_stream_V_strb_V_U_vld_out),
    .ack_out(output_stream_TREADY),
    .apdone_blk(regslice_both_output_stream_V_strb_V_U_apdone_blk)
);

top_module_regslice_both #(
    .DataWidth( 1 ))
regslice_both_output_stream_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(1'd0),
    .vld_in(output_stream_TVALID_int_regslice),
    .ack_in(regslice_both_output_stream_V_user_V_U_ack_in_dummy),
    .data_out(output_stream_TUSER),
    .vld_out(regslice_both_output_stream_V_user_V_U_vld_out),
    .ack_out(output_stream_TREADY),
    .apdone_blk(regslice_both_output_stream_V_user_V_U_apdone_blk)
);

top_module_regslice_both #(
    .DataWidth( 1 ))
regslice_both_output_stream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(outHash_last_V_reg_650),
    .vld_in(output_stream_TVALID_int_regslice),
    .ack_in(regslice_both_output_stream_V_last_V_U_ack_in_dummy),
    .data_out(output_stream_TLAST),
    .vld_out(regslice_both_output_stream_V_last_V_U_vld_out),
    .ack_out(output_stream_TREADY),
    .apdone_blk(regslice_both_output_stream_V_last_V_U_apdone_blk)
);

top_module_regslice_both #(
    .DataWidth( 1 ))
regslice_both_output_stream_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(1'd0),
    .vld_in(output_stream_TVALID_int_regslice),
    .ack_in(regslice_both_output_stream_V_id_V_U_ack_in_dummy),
    .data_out(output_stream_TID),
    .vld_out(regslice_both_output_stream_V_id_V_U_vld_out),
    .ack_out(output_stream_TREADY),
    .apdone_blk(regslice_both_output_stream_V_id_V_U_apdone_blk)
);

top_module_regslice_both #(
    .DataWidth( 1 ))
regslice_both_output_stream_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(1'd0),
    .vld_in(output_stream_TVALID_int_regslice),
    .ack_in(regslice_both_output_stream_V_dest_V_U_ack_in_dummy),
    .data_out(output_stream_TDEST),
    .vld_out(regslice_both_output_stream_V_dest_V_U_vld_out),
    .ack_out(output_stream_TREADY),
    .apdone_blk(regslice_both_output_stream_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((regslice_both_output_stream_V_data_V_U_apdone_blk == 1'b0) & (icmp_ln91_fu_403_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_modf_double_s_fu_223_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state11))) begin
            grp_generic_modf_double_s_fu_223_ap_start_reg <= 1'b1;
        end else if ((grp_generic_modf_double_s_fu_223_ap_ready == 1'b1)) begin
            grp_generic_modf_double_s_fu_223_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_modf_double_s_fu_230_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state50)) begin
            grp_generic_modf_double_s_fu_230_ap_start_reg <= 1'b1;
        end else if ((grp_generic_modf_double_s_fu_230_ap_ready == 1'b1)) begin
            grp_generic_modf_double_s_fu_230_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_remainder_float_s_fu_237_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state56)) begin
            grp_generic_remainder_float_s_fu_237_ap_start_reg <= 1'b1;
        end else if ((grp_generic_remainder_float_s_fu_237_ap_ready == 1'b1)) begin
            grp_generic_remainder_float_s_fu_237_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pow_generic_float_s_fu_204_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_NS_fsm_state29) & (1'b1 == ap_CS_fsm_state28)) | ((1'b1 == ap_NS_fsm_state4) & (1'b1 == ap_CS_fsm_state3)))) begin
            grp_pow_generic_float_s_fu_204_ap_start_reg <= 1'b1;
        end else if ((grp_pow_generic_float_s_fu_204_ap_ready == 1'b1)) begin
            grp_pow_generic_float_s_fu_204_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln80_fu_358_p2 == 1'd1))) begin
        i_5_fu_158 <= 19'd0;
    end else if (((regslice_both_output_stream_V_data_V_U_apdone_blk == 1'b0) & (icmp_ln91_fu_403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        i_5_fu_158 <= i_10_fu_409_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((u_diff_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_138 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln80_fu_358_p2 == 1'd0))) begin
        i_fu_138 <= i_8_fu_364_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((u_diff_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        x_diff_1_fu_146 <= p_read;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        x_diff_1_fu_146 <= grp_fu_252_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln80_fu_358_p2 == 1'd1))) begin
        x_diff_2_fu_154 <= x_diff_1_fu_146;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        x_diff_2_fu_154 <= grp_fu_252_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((u_diff_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        y_diff_2_fu_142 <= p_read;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        y_diff_2_fu_142 <= grp_fu_252_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln80_fu_358_p2 == 1'd1))) begin
        y_diff_3_fu_150 <= y_diff_2_fu_142;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        y_diff_3_fu_150 <= y_diff_fu_255_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        call_ret_reg_668 <= grp_generic_modf_double_s_fu_230_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        conv3_reg_658 <= conv3_fu_264_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        mul4_reg_663 <= grp_fu_283_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_fu_403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        outHash_last_V_reg_650 <= outHash_last_V_fu_415_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        p_reg_693 <= grp_fu_246_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state3) & (icmp_ln80_fu_358_p2 == 1'd0)))) begin
        reg_291 <= grp_fu_258_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_297 <= grp_fu_274_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_304 <= grp_fu_267_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_311 <= grp_generic_modf_double_s_fu_223_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state16))) begin
        reg_316 <= grp_pow_generic_float_s_fu_204_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_322 <= grp_fu_261_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_327 <= grp_fu_279_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        trunc_ln368_reg_683 <= trunc_ln368_fu_448_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        uu_diff_reg_613 <= grp_fu_287_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        x_diff_3_reg_673 <= grp_fu_252_p1;
        y_diff_reg_678 <= y_diff_fu_255_p1;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((grp_generic_modf_double_s_fu_223_ap_done == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((u_diff_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

always @ (*) begin
    if ((grp_generic_modf_double_s_fu_223_ap_done == 1'b0)) begin
        ap_ST_fsm_state26_blk = 1'b1;
    end else begin
        ap_ST_fsm_state26_blk = 1'b0;
    end
end

assign ap_ST_fsm_state27_blk = 1'b0;

always @ (*) begin
    if ((regslice_both_output_stream_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state28_blk = 1'b1;
    end else begin
        ap_ST_fsm_state28_blk = 1'b0;
    end
end

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state51_on_subcall_done)) begin
        ap_ST_fsm_state51_blk = 1'b1;
    end else begin
        ap_ST_fsm_state51_blk = 1'b0;
    end
end

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

always @ (*) begin
    if (((output_stream_TREADY_int_regslice == 1'b0) | (grp_generic_remainder_float_s_fu_237_ap_done == 1'b0))) begin
        ap_ST_fsm_state57_blk = 1'b1;
    end else begin
        ap_ST_fsm_state57_blk = 1'b0;
    end
end

always @ (*) begin
    if ((output_stream_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state58_blk = 1'b1;
    end else begin
        ap_ST_fsm_state58_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((regslice_both_output_stream_V_data_V_U_apdone_blk == 1'b0) & (icmp_ln91_fu_403_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_output_stream_V_data_V_U_apdone_blk == 1'b0) & (icmp_ln91_fu_403_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_258_p0 = x_diff_2_fu_154;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_258_p0 = y_diff_2_fu_142;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_258_p0 = x_diff_1_fu_146;
    end else begin
        grp_fu_258_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_261_p0 = y_diff_3_fu_150;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_261_p0 = reg_316;
    end else begin
        grp_fu_261_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_267_p0 = reg_327;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_267_p0 = reg_297;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_fu_267_p0 = 64'd4607182418800017408;
    end else begin
        grp_fu_267_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_267_p1 = mul4_reg_663;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_267_p1 = reg_327;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_fu_267_p1 = reg_291;
    end else begin
        grp_fu_267_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_274_p0 = reg_297;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_fu_274_p0 = uu_diff_reg_613;
    end else begin
        grp_fu_274_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_274_p1 = reg_304;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_fu_274_p1 = reg_291;
    end else begin
        grp_fu_274_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((u_diff_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        grp_fu_287_ce = 1'b1;
    end else begin
        grp_fu_287_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_generic_modf_double_s_fu_223_x = reg_304;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_generic_modf_double_s_fu_223_x = reg_297;
    end else begin
        grp_generic_modf_double_s_fu_223_x = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7) | ((grp_generic_modf_double_s_fu_223_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12)))) begin
        grp_pow_generic_float_s_fu_204_ap_ce = 1'b1;
    end else begin
        grp_pow_generic_float_s_fu_204_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_pow_generic_float_s_fu_204_base_r = y_diff_3_fu_150;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_pow_generic_float_s_fu_204_base_r = y_diff_2_fu_142;
    end else begin
        grp_pow_generic_float_s_fu_204_base_r = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57))) begin
        output_stream_TDATA_blk_n = output_stream_TREADY_int_regslice;
    end else begin
        output_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_stream_TREADY_int_regslice == 1'b0) | (grp_generic_remainder_float_s_fu_237_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state57))) begin
        output_stream_TVALID_int_regslice = 1'b1;
    end else begin
        output_stream_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        u_diff_blk_n = u_diff_empty_n;
    end else begin
        u_diff_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((u_diff_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        u_diff_read = 1'b1;
    end else begin
        u_diff_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((u_diff_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln80_fu_358_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_generic_modf_double_s_fu_223_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((grp_generic_modf_double_s_fu_223_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state28 : begin
            if (((regslice_both_output_stream_V_data_V_U_apdone_blk == 1'b0) & (icmp_ln91_fu_403_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((regslice_both_output_stream_V_data_V_U_apdone_blk == 1'b0) & (icmp_ln91_fu_403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            if (((1'b0 == ap_block_state51_on_subcall_done) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if ((~((output_stream_TREADY_int_regslice == 1'b0) | (grp_generic_remainder_float_s_fu_237_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state58 : begin
            if (((output_stream_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln346_fu_500_p2 = ($signed(zext_ln346_fu_496_p1) + $signed(9'd385));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state29 = ap_NS_fsm[32'd28];

assign ap_NS_fsm_state4 = ap_NS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((u_diff_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state51_on_subcall_done = ((grp_generic_modf_double_s_fu_230_ap_done == 1'b0) | (grp_generic_modf_double_s_fu_223_ap_done == 1'b0));
end

assign data_V_1_fu_464_p1 = grp_generic_remainder_float_s_fu_237_ap_return;

assign data_V_fu_444_p1 = grp_fu_242_p2;

assign grp_fu_246_p0 = p_Result_s_fu_452_p3;

assign grp_generic_modf_double_s_fu_223_ap_start = grp_generic_modf_double_s_fu_223_ap_start_reg;

assign grp_generic_modf_double_s_fu_230_ap_start = grp_generic_modf_double_s_fu_230_ap_start_reg;

assign grp_generic_remainder_float_s_fu_237_ap_start = grp_generic_remainder_float_s_fu_237_ap_start_reg;

assign grp_pow_generic_float_s_fu_204_ap_start = grp_pow_generic_float_s_fu_204_ap_start_reg;

assign i_10_fu_409_p2 = (i_5_fu_158 + 19'd1);

assign i_8_fu_364_p2 = (i_fu_138 + 4'd1);

assign icmp_ln80_fu_358_p2 = ((i_fu_138 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln91_fu_403_p2 = ((i_5_fu_158 == 19'd262144) ? 1'b1 : 1'b0);

assign isNeg_fu_506_p3 = add_ln346_fu_500_p2[32'd8];

assign mantissa_fu_482_p4 = {{{{1'd1}, {p_Result_16_fu_478_p1}}}, {1'd0}};

assign outHash_last_V_fu_415_p2 = ((i_5_fu_158 == 19'd262143) ? 1'b1 : 1'b0);

assign output_stream_TDATA_int_regslice = val_fu_574_p3;

assign output_stream_TVALID = regslice_both_output_stream_V_data_V_U_vld_out;

assign p_Result_16_fu_478_p1 = data_V_1_fu_464_p1[22:0];

assign p_Result_s_fu_452_p3 = {{1'd0}, {trunc_ln368_reg_683}};

assign r_V_14_fu_546_p2 = zext_ln68_fu_492_p1 << zext_ln1488_fu_536_p1;

assign r_V_fu_540_p2 = zext_ln68_fu_492_p1 >> zext_ln1488_fu_536_p1;

assign sext_ln1488_fu_532_p1 = $signed(ush_fu_524_p3);

assign sext_ln1512_fu_520_p1 = $signed(sub_ln1512_fu_514_p2);

assign sub_ln1512_fu_514_p2 = (8'd127 - xs_exp_V_fu_468_p4);

assign tmp_29_fu_564_p4 = {{r_V_14_fu_546_p2[31:24]}};

assign tmp_fu_552_p3 = r_V_fu_540_p2[32'd24];

assign trunc_ln368_fu_448_p1 = data_V_fu_444_p1[30:0];

assign ush_fu_524_p3 = ((isNeg_fu_506_p3[0:0] == 1'b1) ? sext_ln1512_fu_520_p1 : add_ln346_fu_500_p2);

assign val_fu_574_p3 = ((isNeg_fu_506_p3[0:0] == 1'b1) ? zext_ln818_fu_560_p1 : tmp_29_fu_564_p4);

assign xs_exp_V_fu_468_p4 = {{data_V_1_fu_464_p1[30:23]}};

assign zext_ln1488_fu_536_p1 = $unsigned(sext_ln1488_fu_532_p1);

assign zext_ln346_fu_496_p1 = xs_exp_V_fu_468_p4;

assign zext_ln68_fu_492_p1 = mantissa_fu_482_p4;

assign zext_ln818_fu_560_p1 = tmp_fu_552_p3;

endmodule //top_module_logmap
