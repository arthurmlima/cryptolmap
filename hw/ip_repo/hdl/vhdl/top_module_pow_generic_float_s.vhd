-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_module_pow_generic_float_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    base_r : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of top_module_pow_generic_float_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv9_182 : STD_LOGIC_VECTOR (8 downto 0) := "110000010";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv52_B17217F7D1C : STD_LOGIC_VECTOR (51 downto 0) := "0000000010110001011100100001011111110111110100011100";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv15_4000 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv36_B17217F7D : STD_LOGIC_VECTOR (35 downto 0) := "101100010111001000010111111101111101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv27_4 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000100";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_382 : STD_LOGIC_VECTOR (9 downto 0) := "1110000010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_7F800000 : STD_LOGIC_VECTOR (31 downto 0) := "01111111100000000000000000000000";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv25_B8A : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000101110001010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log0_lut_table_array_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log0_lut_table_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log0_lut_table_array_V_q0 : STD_LOGIC_VECTOR (55 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_V_q0 : STD_LOGIC_VECTOR (51 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_V_q0 : STD_LOGIC_VECTOR (48 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_V_q0 : STD_LOGIC_VECTOR (43 downto 0);
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_V_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_11_fu_355_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_reg_1561 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_Result_11_reg_1561_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_reg_1561_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_reg_1561_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_reg_1561_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_reg_1561_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_reg_1561_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_reg_1561_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_reg_1561_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_reg_1561_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_reg_1561_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_reg_1561_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_reg_1561_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1567 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1567_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1567_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1567_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1567_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1567_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1567_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1567_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1567_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1567_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1567_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1567_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1567_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1573 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1573_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1573_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1573_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1573_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1573_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1573_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1573_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1573_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1573_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1573_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1573_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1573_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1579 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1579_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1579_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1579_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1579_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1579_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1579_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1579_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1579_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1579_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1579_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1579_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1579_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_1_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_1_reg_1585 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_1_reg_1585_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_1_reg_1585_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_1_reg_1585_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_1_reg_1585_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_1_reg_1585_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_1_reg_1585_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_1_reg_1585_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_1_reg_1585_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_1_reg_1585_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_1_reg_1585_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_1_reg_1585_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_1_reg_1585_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1591 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1591_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1591_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1591_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1591_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1591_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1591_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1591_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1591_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1591_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1591_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1591_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1591_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_429_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1596 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_12_fu_437_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_12_reg_1601 : STD_LOGIC_VECTOR (22 downto 0);
    signal b_exp_2_fu_457_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal b_exp_2_reg_1607 : STD_LOGIC_VECTOR (8 downto 0);
    signal b_exp_2_reg_1607_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal b_exp_2_reg_1607_pp0_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal b_exp_2_reg_1607_pp0_iter3_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal b_exp_2_reg_1607_pp0_iter4_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal b_exp_2_reg_1607_pp0_iter5_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal log_sum_V_reg_1627 : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1627_pp0_iter2_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1627_pp0_iter3_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1627_pp0_iter4_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal z2_V_reg_1637 : STD_LOGIC_VECTOR (40 downto 0);
    signal a_V_1_reg_1648 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_25_reg_1654 : STD_LOGIC_VECTOR (34 downto 0);
    signal zext_ln818_1_fu_711_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal zext_ln818_1_reg_1659 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_26_reg_1669 : STD_LOGIC_VECTOR (37 downto 0);
    signal r_V_11_fu_743_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_11_reg_1674 : STD_LOGIC_VECTOR (49 downto 0);
    signal add_ln813_fu_754_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal add_ln813_reg_1684 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_Result_14_reg_1689 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_14_reg_1689_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln2_reg_1699 : STD_LOGIC_VECTOR (26 downto 0);
    signal trunc_ln2_reg_1699_pp0_iter7_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal trunc_ln2_reg_1699_pp0_iter8_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_10_reg_1704 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1704_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1704_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1704_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1704_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1704_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1704_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_18_fu_1026_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_18_reg_1715 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_18_reg_1715_pp0_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_18_reg_1715_pp0_iter11_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_18_reg_1715_pp0_iter12_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal m_diff_lo_V_fu_1069_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal m_diff_lo_V_reg_1721 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_Z1_V_reg_1736 : STD_LOGIC_VECTOR (26 downto 0);
    signal exp_Z1_V_reg_1736_pp0_iter11_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal exp_Z1_V_reg_1736_pp0_iter12_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal zext_ln541_fu_465_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln541_1_fu_610_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln541_2_fu_715_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln541_3_fu_749_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln541_4_fu_1073_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln541_5_fu_1088_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_V_fu_351_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bs_exp_V_fu_363_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln346_fu_377_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal b_exp_fu_381_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal bs_sig_V_fu_373_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln369_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln970_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_exp_1_fu_451_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal index0_V_fu_441_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_8_fu_480_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1488_fu_487_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Result_13_fu_471_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1530_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln1488_2_cast_fu_528_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_5_fu_521_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_537_p4 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln1488_1_fu_546_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal trunc_ln813_fu_518_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal lhs_fu_558_p3 : STD_LOGIC_VECTOR (42 downto 0);
    signal eZ_fu_550_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln1347_fu_566_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal a_V_fu_509_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal z1_V_fu_502_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal r_V_9_fu_584_p0 : STD_LOGIC_VECTOR (38 downto 0);
    signal r_V_9_fu_584_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_9_fu_584_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_14_fu_570_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln1348_fu_590_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal ret_V_fu_594_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln818_fu_635_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal lhs_2_fu_650_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal eZ_1_fu_642_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal zext_ln813_fu_661_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal zext_ln1347_1_fu_657_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_10_fu_677_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_10_fu_677_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal r_V_10_fu_677_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal rhs_4_fu_683_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal ret_V_15_fu_665_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal zext_ln1348_1_fu_691_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_3_fu_695_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal z3_V_fu_701_p4 : STD_LOGIC_VECTOR (43 downto 0);
    signal a_V_2_fu_719_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_11_fu_743_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_11_fu_743_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal logn_V_cast_fu_638_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal Elog2_V_fu_762_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal lhs_4_fu_779_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal eZ_2_fu_772_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal zext_ln1347_2_fu_786_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln813_1_fu_790_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal rhs_7_fu_800_p3 : STD_LOGIC_VECTOR (55 downto 0);
    signal ret_V_16_fu_794_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln1348_2_fu_807_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln163_fu_768_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal zext_ln163_1_fu_817_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal add_ln813_1_fu_821_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal zext_ln813_2_fu_827_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal ret_V_5_fu_811_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_28_fu_846_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_12_fu_860_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln1270_1_fu_856_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal r_V_12_fu_860_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_12_fu_860_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_27_fu_836_p4 : STD_LOGIC_VECTOR (38 downto 0);
    signal lhs_V_fu_876_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal rhs_8_fu_866_p4 : STD_LOGIC_VECTOR (44 downto 0);
    signal zext_ln1348_3_fu_884_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1348_4_fu_888_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_6_fu_892_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Elog2_V_fu_762_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln1_fu_898_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal log_sum_V_1_fu_831_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal sext_ln1347_fu_916_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal add_ln1347_fu_920_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal sext_ln1347_1_fu_926_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lhs_V_2_fu_908_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_7_fu_930_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_fix_hi_V_fu_936_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_9_fu_976_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1542_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln1003_fu_1003_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln_fu_987_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln1003_fu_1006_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_9_fu_1012_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_6_fu_996_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1002_fu_1018_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1270_1_fu_1038_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal trunc_ln813_1_fu_1044_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal m_diff_V_fu_1054_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal m_diff_hi_V_fu_1059_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal Z2_ind_fu_1078_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln813_3_fu_1093_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln813_4_fu_1096_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_11_fu_1100_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal exp_Z1_hi_V_fu_1116_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_Z1P_m_1_V_fu_1106_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal xor_ln1023_fu_1138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_NaN_fu_1143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln415_1_fu_1152_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal x_is_inf_fu_1148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln460_3_fu_1166_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln467_s_fu_1180_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ret_V_19_fu_1193_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_1553_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal trunc_ln1347_fu_1209_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal lhs_V_6_fu_1198_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln1347_3_fu_1206_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal trunc_ln1347_1_fu_1213_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal zext_ln1347_4_fu_1221_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal ret_V_13_fu_1224_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Result_7_fu_1236_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_V_fu_1244_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_2_fu_1249_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_9_fu_1256_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln1347_6_fu_1230_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_fu_1283_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_4_fu_1293_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln186_fu_1311_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_exp_V_fu_1315_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_1303_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal xor_ln407_1_fu_1331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_fu_1160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_fu_1336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_n1_fu_1134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_fu_1341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln371_fu_1353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_fu_1174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln371_1_fu_1359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln460_fu_1365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_fu_1187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln460_1_fu_1377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln467_fu_1383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln467_1_fu_1395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_fu_1266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln657_fu_1401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln182_fu_1272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1039_fu_1277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln657_fu_1418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1039_fu_1424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1039_1_fu_1430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln182_1_fu_1413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln182_fu_1407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln467_fu_1389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln460_fu_1371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln371_fu_1347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1039_fu_1436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1039_4_fu_1470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1039_fu_1462_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln1039_1_fu_1442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1039_2_fu_1456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1039_1_fu_1448_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_15_fu_1321_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln1039_3_fu_1484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1039_2_fu_1476_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1039_3_fu_1490_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1039_4_fu_1498_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln1039_fu_1506_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln415_fu_1517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln407_fu_1510_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1530_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1530_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1542_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1553_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1553_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1530_ce : STD_LOGIC;
    signal grp_fu_1542_ce : STD_LOGIC;
    signal grp_fu_1553_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to12 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1530_p10 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1553_p00 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1553_p10 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_10_fu_677_p00 : STD_LOGIC_VECTOR (46 downto 0);
    signal r_V_10_fu_677_p10 : STD_LOGIC_VECTOR (46 downto 0);
    signal r_V_11_fu_743_p00 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_11_fu_743_p10 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_9_fu_584_p00 : STD_LOGIC_VECTOR (42 downto 0);
    signal r_V_9_fu_584_p10 : STD_LOGIC_VECTOR (42 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component top_module_mul_39ns_4ns_43_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (38 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (42 downto 0) );
    end component;


    component top_module_mul_6ns_41ns_47_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (40 downto 0);
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component top_module_mul_6ns_44ns_50_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (43 downto 0);
        dout : OUT STD_LOGIC_VECTOR (49 downto 0) );
    end component;


    component top_module_mul_9s_45ns_52_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (44 downto 0);
        dout : OUT STD_LOGIC_VECTOR (51 downto 0) );
    end component;


    component top_module_mul_23ns_23ns_46_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (22 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component top_module_mul_10s_36s_36_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (35 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component top_module_mul_mul_25s_6ns_25_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component top_module_mac_muladd_13s_12ns_16s_25_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component top_module_mul_mul_18ns_18ns_36_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component top_module_pow_generic_float_s_pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component top_module_pow_generic_float_s_pow_reduce_anonymous_namespace_log0_lut_table_array_V_ROMcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (55 downto 0) );
    end component;


    component top_module_pow_generic_float_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (51 downto 0) );
    end component;


    component top_module_pow_generic_float_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (48 downto 0) );
    end component;


    component top_module_pow_generic_float_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_fYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (43 downto 0) );
    end component;


    component top_module_pow_generic_float_s_pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_arrg8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component top_module_pow_generic_float_s_pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_arrayhbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_U : component top_module_pow_generic_float_s_pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_bkb
    generic map (
        DataWidth => 6,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_q0);

    pow_reduce_anonymous_namespace_log0_lut_table_array_V_U : component top_module_pow_generic_float_s_pow_reduce_anonymous_namespace_log0_lut_table_array_V_ROMcud
    generic map (
        DataWidth => 56,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log0_lut_table_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_log0_lut_table_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_log0_lut_table_array_V_q0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_V_U : component top_module_pow_generic_float_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4dEe
    generic map (
        DataWidth => 52,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_V_q0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_V_U : component top_module_pow_generic_float_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6eOg
    generic map (
        DataWidth => 49,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_V_q0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_V_U : component top_module_pow_generic_float_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_fYi
    generic map (
        DataWidth => 44,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_V_q0);

    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_V_U : component top_module_pow_generic_float_s_pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_arrg8j
    generic map (
        DataWidth => 27,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_V_q0);

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_V_U : component top_module_pow_generic_float_s_pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_arrayhbi
    generic map (
        DataWidth => 8,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_V_q0);

    mul_39ns_4ns_43_1_1_U189 : component top_module_mul_39ns_4ns_43_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 39,
        din1_WIDTH => 4,
        dout_WIDTH => 43)
    port map (
        din0 => r_V_9_fu_584_p0,
        din1 => r_V_9_fu_584_p1,
        dout => r_V_9_fu_584_p2);

    mul_6ns_41ns_47_1_1_U190 : component top_module_mul_6ns_41ns_47_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 41,
        dout_WIDTH => 47)
    port map (
        din0 => r_V_10_fu_677_p0,
        din1 => r_V_10_fu_677_p1,
        dout => r_V_10_fu_677_p2);

    mul_6ns_44ns_50_1_1_U191 : component top_module_mul_6ns_44ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 44,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_11_fu_743_p0,
        din1 => r_V_11_fu_743_p1,
        dout => r_V_11_fu_743_p2);

    mul_9s_45ns_52_1_1_U192 : component top_module_mul_9s_45ns_52_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 45,
        dout_WIDTH => 52)
    port map (
        din0 => b_exp_2_reg_1607_pp0_iter5_reg,
        din1 => Elog2_V_fu_762_p1,
        dout => Elog2_V_fu_762_p2);

    mul_23ns_23ns_46_1_1_U193 : component top_module_mul_23ns_23ns_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 23,
        din1_WIDTH => 23,
        dout_WIDTH => 46)
    port map (
        din0 => r_V_12_fu_860_p0,
        din1 => r_V_12_fu_860_p1,
        dout => r_V_12_fu_860_p2);

    mul_10s_36s_36_1_1_U194 : component top_module_mul_10s_36s_36_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => ret_V_18_fu_1026_p3,
        din1 => ap_const_lv36_B17217F7D,
        dout => mul_ln1270_1_fu_1038_p2);

    mul_mul_25s_6ns_25_4_1_U195 : component top_module_mul_mul_25s_6ns_25_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 25,
        din1_WIDTH => 6,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1530_p0,
        din1 => grp_fu_1530_p1,
        ce => grp_fu_1530_ce,
        dout => grp_fu_1530_p2);

    mac_muladd_13s_12ns_16s_25_4_1_U196 : component top_module_mac_muladd_13s_12ns_16s_25_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 13,
        din1_WIDTH => 12,
        din2_WIDTH => 16,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => m_fix_hi_V_fu_936_p4,
        din1 => grp_fu_1542_p1,
        din2 => rhs_9_fu_976_p3,
        ce => grp_fu_1542_ce,
        dout => grp_fu_1542_p3);

    mul_mul_18ns_18ns_36_4_1_U197 : component top_module_mul_mul_18ns_18ns_36_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 36)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1553_p0,
        din1 => grp_fu_1553_p1,
        ce => grp_fu_1553_ce,
        dout => grp_fu_1553_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (x_is_p1_reg_1579_pp0_iter3_reg = ap_const_lv1_0))) then
                a_V_1_reg_1648 <= ret_V_fu_594_p2(43 downto 38);
                tmp_25_reg_1654 <= ret_V_fu_594_p2(37 downto 3);
                z2_V_reg_1637 <= ret_V_fu_594_p2(43 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (x_is_p1_reg_1579_pp0_iter4_reg = ap_const_lv1_0))) then
                add_ln813_reg_1684 <= add_ln813_fu_754_p2;
                r_V_11_reg_1674 <= r_V_11_fu_743_p2;
                tmp_26_reg_1669 <= ret_V_3_fu_695_p2(43 downto 6);
                    zext_ln818_1_reg_1659(43 downto 0) <= zext_ln818_1_fu_711_p1(43 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                b_exp_2_reg_1607 <= b_exp_2_fu_457_p3;
                b_exp_2_reg_1607_pp0_iter1_reg <= b_exp_2_reg_1607;
                icmp_ln1019_1_reg_1585 <= icmp_ln1019_1_fu_417_p2;
                icmp_ln1019_1_reg_1585_pp0_iter1_reg <= icmp_ln1019_1_reg_1585;
                icmp_ln1019_reg_1567 <= icmp_ln1019_fu_393_p2;
                icmp_ln1019_reg_1567_pp0_iter1_reg <= icmp_ln1019_reg_1567;
                log_sum_V_reg_1627 <= pow_reduce_anonymous_namespace_log0_lut_table_array_V_q0;
                p_Result_11_reg_1561 <= data_V_fu_351_p1(31 downto 31);
                p_Result_11_reg_1561_pp0_iter1_reg <= p_Result_11_reg_1561;
                p_Result_12_reg_1601 <= p_Result_12_fu_437_p1;
                p_Result_s_reg_1596 <= data_V_fu_351_p1(22 downto 22);
                x_is_0_reg_1591 <= x_is_0_fu_423_p2;
                x_is_0_reg_1591_pp0_iter1_reg <= x_is_0_reg_1591;
                x_is_1_reg_1573 <= x_is_1_fu_399_p2;
                x_is_1_reg_1573_pp0_iter1_reg <= x_is_1_reg_1573;
                x_is_p1_reg_1579 <= x_is_p1_fu_411_p2;
                x_is_p1_reg_1579_pp0_iter1_reg <= x_is_p1_reg_1579;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then
                b_exp_2_reg_1607_pp0_iter2_reg <= b_exp_2_reg_1607_pp0_iter1_reg;
                b_exp_2_reg_1607_pp0_iter3_reg <= b_exp_2_reg_1607_pp0_iter2_reg;
                b_exp_2_reg_1607_pp0_iter4_reg <= b_exp_2_reg_1607_pp0_iter3_reg;
                b_exp_2_reg_1607_pp0_iter5_reg <= b_exp_2_reg_1607_pp0_iter4_reg;
                exp_Z1_V_reg_1736_pp0_iter11_reg <= exp_Z1_V_reg_1736;
                exp_Z1_V_reg_1736_pp0_iter12_reg <= exp_Z1_V_reg_1736_pp0_iter11_reg;
                icmp_ln1019_1_reg_1585_pp0_iter10_reg <= icmp_ln1019_1_reg_1585_pp0_iter9_reg;
                icmp_ln1019_1_reg_1585_pp0_iter11_reg <= icmp_ln1019_1_reg_1585_pp0_iter10_reg;
                icmp_ln1019_1_reg_1585_pp0_iter12_reg <= icmp_ln1019_1_reg_1585_pp0_iter11_reg;
                icmp_ln1019_1_reg_1585_pp0_iter2_reg <= icmp_ln1019_1_reg_1585_pp0_iter1_reg;
                icmp_ln1019_1_reg_1585_pp0_iter3_reg <= icmp_ln1019_1_reg_1585_pp0_iter2_reg;
                icmp_ln1019_1_reg_1585_pp0_iter4_reg <= icmp_ln1019_1_reg_1585_pp0_iter3_reg;
                icmp_ln1019_1_reg_1585_pp0_iter5_reg <= icmp_ln1019_1_reg_1585_pp0_iter4_reg;
                icmp_ln1019_1_reg_1585_pp0_iter6_reg <= icmp_ln1019_1_reg_1585_pp0_iter5_reg;
                icmp_ln1019_1_reg_1585_pp0_iter7_reg <= icmp_ln1019_1_reg_1585_pp0_iter6_reg;
                icmp_ln1019_1_reg_1585_pp0_iter8_reg <= icmp_ln1019_1_reg_1585_pp0_iter7_reg;
                icmp_ln1019_1_reg_1585_pp0_iter9_reg <= icmp_ln1019_1_reg_1585_pp0_iter8_reg;
                icmp_ln1019_reg_1567_pp0_iter10_reg <= icmp_ln1019_reg_1567_pp0_iter9_reg;
                icmp_ln1019_reg_1567_pp0_iter11_reg <= icmp_ln1019_reg_1567_pp0_iter10_reg;
                icmp_ln1019_reg_1567_pp0_iter12_reg <= icmp_ln1019_reg_1567_pp0_iter11_reg;
                icmp_ln1019_reg_1567_pp0_iter2_reg <= icmp_ln1019_reg_1567_pp0_iter1_reg;
                icmp_ln1019_reg_1567_pp0_iter3_reg <= icmp_ln1019_reg_1567_pp0_iter2_reg;
                icmp_ln1019_reg_1567_pp0_iter4_reg <= icmp_ln1019_reg_1567_pp0_iter3_reg;
                icmp_ln1019_reg_1567_pp0_iter5_reg <= icmp_ln1019_reg_1567_pp0_iter4_reg;
                icmp_ln1019_reg_1567_pp0_iter6_reg <= icmp_ln1019_reg_1567_pp0_iter5_reg;
                icmp_ln1019_reg_1567_pp0_iter7_reg <= icmp_ln1019_reg_1567_pp0_iter6_reg;
                icmp_ln1019_reg_1567_pp0_iter8_reg <= icmp_ln1019_reg_1567_pp0_iter7_reg;
                icmp_ln1019_reg_1567_pp0_iter9_reg <= icmp_ln1019_reg_1567_pp0_iter8_reg;
                log_sum_V_reg_1627_pp0_iter2_reg <= log_sum_V_reg_1627;
                log_sum_V_reg_1627_pp0_iter3_reg <= log_sum_V_reg_1627_pp0_iter2_reg;
                log_sum_V_reg_1627_pp0_iter4_reg <= log_sum_V_reg_1627_pp0_iter3_reg;
                p_Result_11_reg_1561_pp0_iter10_reg <= p_Result_11_reg_1561_pp0_iter9_reg;
                p_Result_11_reg_1561_pp0_iter11_reg <= p_Result_11_reg_1561_pp0_iter10_reg;
                p_Result_11_reg_1561_pp0_iter12_reg <= p_Result_11_reg_1561_pp0_iter11_reg;
                p_Result_11_reg_1561_pp0_iter2_reg <= p_Result_11_reg_1561_pp0_iter1_reg;
                p_Result_11_reg_1561_pp0_iter3_reg <= p_Result_11_reg_1561_pp0_iter2_reg;
                p_Result_11_reg_1561_pp0_iter4_reg <= p_Result_11_reg_1561_pp0_iter3_reg;
                p_Result_11_reg_1561_pp0_iter5_reg <= p_Result_11_reg_1561_pp0_iter4_reg;
                p_Result_11_reg_1561_pp0_iter6_reg <= p_Result_11_reg_1561_pp0_iter5_reg;
                p_Result_11_reg_1561_pp0_iter7_reg <= p_Result_11_reg_1561_pp0_iter6_reg;
                p_Result_11_reg_1561_pp0_iter8_reg <= p_Result_11_reg_1561_pp0_iter7_reg;
                p_Result_11_reg_1561_pp0_iter9_reg <= p_Result_11_reg_1561_pp0_iter8_reg;
                p_Result_14_reg_1689_pp0_iter7_reg <= p_Result_14_reg_1689;
                ret_V_18_reg_1715_pp0_iter10_reg <= ret_V_18_reg_1715;
                ret_V_18_reg_1715_pp0_iter11_reg <= ret_V_18_reg_1715_pp0_iter10_reg;
                ret_V_18_reg_1715_pp0_iter12_reg <= ret_V_18_reg_1715_pp0_iter11_reg;
                tmp_10_reg_1704_pp0_iter10_reg <= tmp_10_reg_1704_pp0_iter9_reg;
                tmp_10_reg_1704_pp0_iter11_reg <= tmp_10_reg_1704_pp0_iter10_reg;
                tmp_10_reg_1704_pp0_iter12_reg <= tmp_10_reg_1704_pp0_iter11_reg;
                tmp_10_reg_1704_pp0_iter7_reg <= tmp_10_reg_1704;
                tmp_10_reg_1704_pp0_iter8_reg <= tmp_10_reg_1704_pp0_iter7_reg;
                tmp_10_reg_1704_pp0_iter9_reg <= tmp_10_reg_1704_pp0_iter8_reg;
                trunc_ln2_reg_1699_pp0_iter7_reg <= trunc_ln2_reg_1699;
                trunc_ln2_reg_1699_pp0_iter8_reg <= trunc_ln2_reg_1699_pp0_iter7_reg;
                x_is_0_reg_1591_pp0_iter10_reg <= x_is_0_reg_1591_pp0_iter9_reg;
                x_is_0_reg_1591_pp0_iter11_reg <= x_is_0_reg_1591_pp0_iter10_reg;
                x_is_0_reg_1591_pp0_iter12_reg <= x_is_0_reg_1591_pp0_iter11_reg;
                x_is_0_reg_1591_pp0_iter2_reg <= x_is_0_reg_1591_pp0_iter1_reg;
                x_is_0_reg_1591_pp0_iter3_reg <= x_is_0_reg_1591_pp0_iter2_reg;
                x_is_0_reg_1591_pp0_iter4_reg <= x_is_0_reg_1591_pp0_iter3_reg;
                x_is_0_reg_1591_pp0_iter5_reg <= x_is_0_reg_1591_pp0_iter4_reg;
                x_is_0_reg_1591_pp0_iter6_reg <= x_is_0_reg_1591_pp0_iter5_reg;
                x_is_0_reg_1591_pp0_iter7_reg <= x_is_0_reg_1591_pp0_iter6_reg;
                x_is_0_reg_1591_pp0_iter8_reg <= x_is_0_reg_1591_pp0_iter7_reg;
                x_is_0_reg_1591_pp0_iter9_reg <= x_is_0_reg_1591_pp0_iter8_reg;
                x_is_1_reg_1573_pp0_iter10_reg <= x_is_1_reg_1573_pp0_iter9_reg;
                x_is_1_reg_1573_pp0_iter11_reg <= x_is_1_reg_1573_pp0_iter10_reg;
                x_is_1_reg_1573_pp0_iter12_reg <= x_is_1_reg_1573_pp0_iter11_reg;
                x_is_1_reg_1573_pp0_iter2_reg <= x_is_1_reg_1573_pp0_iter1_reg;
                x_is_1_reg_1573_pp0_iter3_reg <= x_is_1_reg_1573_pp0_iter2_reg;
                x_is_1_reg_1573_pp0_iter4_reg <= x_is_1_reg_1573_pp0_iter3_reg;
                x_is_1_reg_1573_pp0_iter5_reg <= x_is_1_reg_1573_pp0_iter4_reg;
                x_is_1_reg_1573_pp0_iter6_reg <= x_is_1_reg_1573_pp0_iter5_reg;
                x_is_1_reg_1573_pp0_iter7_reg <= x_is_1_reg_1573_pp0_iter6_reg;
                x_is_1_reg_1573_pp0_iter8_reg <= x_is_1_reg_1573_pp0_iter7_reg;
                x_is_1_reg_1573_pp0_iter9_reg <= x_is_1_reg_1573_pp0_iter8_reg;
                x_is_p1_reg_1579_pp0_iter10_reg <= x_is_p1_reg_1579_pp0_iter9_reg;
                x_is_p1_reg_1579_pp0_iter11_reg <= x_is_p1_reg_1579_pp0_iter10_reg;
                x_is_p1_reg_1579_pp0_iter12_reg <= x_is_p1_reg_1579_pp0_iter11_reg;
                x_is_p1_reg_1579_pp0_iter2_reg <= x_is_p1_reg_1579_pp0_iter1_reg;
                x_is_p1_reg_1579_pp0_iter3_reg <= x_is_p1_reg_1579_pp0_iter2_reg;
                x_is_p1_reg_1579_pp0_iter4_reg <= x_is_p1_reg_1579_pp0_iter3_reg;
                x_is_p1_reg_1579_pp0_iter5_reg <= x_is_p1_reg_1579_pp0_iter4_reg;
                x_is_p1_reg_1579_pp0_iter6_reg <= x_is_p1_reg_1579_pp0_iter5_reg;
                x_is_p1_reg_1579_pp0_iter7_reg <= x_is_p1_reg_1579_pp0_iter6_reg;
                x_is_p1_reg_1579_pp0_iter8_reg <= x_is_p1_reg_1579_pp0_iter7_reg;
                x_is_p1_reg_1579_pp0_iter9_reg <= x_is_p1_reg_1579_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (x_is_p1_reg_1579_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce))) then
                exp_Z1_V_reg_1736 <= pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (x_is_p1_reg_1579_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce))) then
                m_diff_lo_V_reg_1721 <= m_diff_lo_V_fu_1069_p1;
                ret_V_18_reg_1715 <= ret_V_18_fu_1026_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (x_is_p1_reg_1579_pp0_iter5_reg = ap_const_lv1_0))) then
                p_Result_14_reg_1689 <= ret_V_7_fu_930_p2(63 downto 63);
                tmp_10_reg_1704 <= ret_V_7_fu_930_p2(63 downto 63);
                trunc_ln2_reg_1699 <= ret_V_7_fu_930_p2(54 downto 28);
            end if;
        end if;
    end process;
    zext_ln818_1_reg_1659(49 downto 44) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Elog2_V_fu_762_p1 <= ap_const_lv52_B17217F7D1C(45 - 1 downto 0);
    Z2_ind_fu_1078_p4 <= m_diff_V_fu_1054_p2(17 downto 13);
    a_V_2_fu_719_p4 <= ret_V_3_fu_695_p2(49 downto 44);
    a_V_fu_509_p4 <= grp_fu_1530_p2(24 downto 21);
    add_ln1347_6_fu_1230_p2 <= std_logic_vector(unsigned(trunc_ln1347_1_fu_1213_p3) + unsigned(zext_ln1347_4_fu_1221_p1));
    add_ln1347_fu_920_p2 <= std_logic_vector(unsigned(log_sum_V_1_fu_831_p2) + unsigned(sext_ln1347_fu_916_p1));
    add_ln813_1_fu_821_p2 <= std_logic_vector(unsigned(zext_ln163_fu_768_p1) + unsigned(zext_ln163_1_fu_817_p1));
    add_ln813_fu_754_p2 <= std_logic_vector(unsigned(log_sum_V_reg_1627_pp0_iter4_reg) + unsigned(logn_V_cast_fu_638_p1));
    and_ln1039_1_fu_1430_p2 <= (and_ln467_1_fu_1395_p2 and and_ln1039_fu_1424_p2);
    and_ln1039_fu_1424_p2 <= (xor_ln657_fu_1418_p2 and icmp_ln1039_fu_1277_p2);
    and_ln182_1_fu_1413_p2 <= (tmp_10_reg_1704_pp0_iter12_reg and and_ln657_fu_1401_p2);
    and_ln182_fu_1407_p2 <= (xor_ln182_fu_1272_p2 and and_ln657_fu_1401_p2);
    and_ln371_1_fu_1359_p2 <= (xor_ln371_fu_1353_p2 and and_ln415_fu_1341_p2);
    and_ln371_fu_1347_p2 <= (x_is_n1_fu_1134_p2 and icmp_ln415_fu_1160_p2);
    and_ln415_fu_1341_p2 <= (or_ln407_fu_1336_p2 and icmp_ln415_fu_1160_p2);
    and_ln460_1_fu_1377_p2 <= (icmp_ln460_fu_1174_p2 and and_ln371_1_fu_1359_p2);
    and_ln460_fu_1371_p2 <= (xor_ln460_fu_1365_p2 and and_ln371_1_fu_1359_p2);
    and_ln467_1_fu_1395_p2 <= (icmp_ln467_fu_1187_p2 and and_ln460_1_fu_1377_p2);
    and_ln467_fu_1389_p2 <= (xor_ln467_fu_1383_p2 and and_ln460_1_fu_1377_p2);
    and_ln657_fu_1401_p2 <= (icmp_ln1035_fu_1266_p2 and and_ln467_1_fu_1395_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to12_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to12 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to12)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to12 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        select_ln407_fu_1510_p3 when (or_ln415_fu_1517_p2(0) = '1') else 
        ap_const_lv32_7FFFFFFF;
    b_exp_1_fu_451_p2 <= std_logic_vector(unsigned(zext_ln346_fu_377_p1) + unsigned(ap_const_lv9_182));
    b_exp_2_fu_457_p3 <= 
        b_exp_1_fu_451_p2 when (p_Result_s_fu_429_p3(0) = '1') else 
        b_exp_fu_381_p2;
    b_exp_fu_381_p2 <= std_logic_vector(unsigned(zext_ln346_fu_377_p1) + unsigned(ap_const_lv9_181));
    bitcast_ln1039_fu_1506_p1 <= select_ln1039_4_fu_1498_p3;
    bs_exp_V_fu_363_p4 <= data_V_fu_351_p1(30 downto 23);
    bs_sig_V_fu_373_p1 <= data_V_fu_351_p1(23 - 1 downto 0);
    data_V_fu_351_p1 <= base_r;
    eZ_1_fu_642_p3 <= (ap_const_lv5_10 & zext_ln818_fu_635_p1);
    eZ_2_fu_772_p3 <= (ap_const_lv7_40 & zext_ln818_1_reg_1659);
    eZ_fu_550_p3 <= 
        tmp_s_fu_537_p4 when (tmp_5_fu_521_p3(0) = '1') else 
        zext_ln1488_1_fu_546_p1;
    exp_Z1P_m_1_V_fu_1106_p4 <= ret_V_11_fu_1100_p2(18 downto 1);
    exp_Z1_hi_V_fu_1116_p4 <= pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_V_q0(26 downto 9);

    grp_fu_1530_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1530_ce <= ap_const_logic_1;
        else 
            grp_fu_1530_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1530_p0 <= 
        zext_ln1488_fu_487_p1 when (p_Result_s_reg_1596(0) = '1') else 
        p_Result_13_fu_471_p4;
    grp_fu_1530_p1 <= grp_fu_1530_p10(6 - 1 downto 0);
    grp_fu_1530_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_q0),25));

    grp_fu_1542_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1542_ce <= ap_const_logic_1;
        else 
            grp_fu_1542_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1542_p1 <= ap_const_lv25_B8A(12 - 1 downto 0);

    grp_fu_1553_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1553_ce <= ap_const_logic_1;
        else 
            grp_fu_1553_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1553_p0 <= grp_fu_1553_p00(18 - 1 downto 0);
    grp_fu_1553_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1_hi_V_fu_1116_p4),36));
    grp_fu_1553_p1 <= grp_fu_1553_p10(18 - 1 downto 0);
    grp_fu_1553_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1P_m_1_V_fu_1106_p4),36));
    icmp_ln1003_fu_1006_p2 <= "1" when (trunc_ln1003_fu_1003_p1 = ap_const_lv15_0) else "0";
    icmp_ln1019_1_fu_417_p2 <= "1" when (bs_exp_V_fu_363_p4 = ap_const_lv8_FF) else "0";
    icmp_ln1019_fu_393_p2 <= "1" when (bs_sig_V_fu_373_p1 = ap_const_lv23_0) else "0";
    icmp_ln1035_fu_1266_p2 <= "1" when (signed(tmp_9_fu_1256_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln1039_fu_1277_p2 <= "1" when (signed(r_exp_V_2_fu_1249_p3) < signed(ap_const_lv10_382)) else "0";
    icmp_ln369_fu_387_p2 <= "1" when (b_exp_fu_381_p2 = ap_const_lv9_0) else "0";
    icmp_ln415_fu_1160_p2 <= "1" when (or_ln415_1_fu_1152_p3 = ap_const_lv2_0) else "0";
    icmp_ln460_fu_1174_p2 <= "1" when (or_ln460_3_fu_1166_p3 = ap_const_lv2_0) else "0";
    icmp_ln467_fu_1187_p2 <= "1" when (or_ln467_s_fu_1180_p3 = ap_const_lv2_0) else "0";
    index0_V_fu_441_p4 <= data_V_fu_351_p1(22 downto 17);
    lhs_2_fu_650_p3 <= (tmp_25_reg_1654 & ap_const_lv14_0);
    lhs_4_fu_779_p3 <= (tmp_26_reg_1669 & ap_const_lv24_0);
    lhs_V_2_fu_908_p3 <= (Elog2_V_fu_762_p2 & ap_const_lv12_0);
    lhs_V_6_fu_1198_p3 <= (ret_V_19_fu_1193_p2 & ap_const_lv17_0);
    lhs_V_fu_876_p3 <= (tmp_27_fu_836_p4 & ap_const_lv24_0);
    lhs_fu_558_p3 <= (trunc_ln813_fu_518_p1 & ap_const_lv22_0);
    log_sum_V_1_fu_831_p2 <= std_logic_vector(unsigned(zext_ln813_2_fu_827_p1) + unsigned(add_ln813_reg_1684));
    logn_V_cast_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_V_q0),56));
    m_diff_V_fu_1054_p2 <= std_logic_vector(unsigned(trunc_ln2_reg_1699_pp0_iter8_reg) - unsigned(trunc_ln813_1_fu_1044_p4));
    m_diff_hi_V_fu_1059_p4 <= m_diff_V_fu_1054_p2(26 downto 18);
    m_diff_lo_V_fu_1069_p1 <= m_diff_V_fu_1054_p2(18 - 1 downto 0);
    m_fix_hi_V_fu_936_p4 <= ret_V_7_fu_930_p2(63 downto 51);
    or_ln1039_1_fu_1442_p2 <= (and_ln467_fu_1389_p2 or and_ln182_fu_1407_p2);
    or_ln1039_2_fu_1456_p2 <= (and_ln460_fu_1371_p2 or and_ln371_fu_1347_p2);
    or_ln1039_3_fu_1484_p2 <= (or_ln1039_fu_1436_p2 or or_ln1039_1_fu_1442_p2);
    or_ln1039_4_fu_1470_p2 <= (and_ln657_fu_1401_p2 or and_ln1039_1_fu_1430_p2);
    or_ln1039_fu_1436_p2 <= (and_ln182_1_fu_1413_p2 or and_ln1039_1_fu_1430_p2);
    or_ln407_fu_1336_p2 <= (xor_ln407_1_fu_1331_p2 or p_Result_11_reg_1561_pp0_iter12_reg);
    or_ln415_1_fu_1152_p3 <= (ap_const_lv1_0 & x_is_NaN_fu_1143_p2);
    or_ln415_fu_1517_p2 <= (x_is_p1_reg_1579_pp0_iter12_reg or icmp_ln415_fu_1160_p2);
    or_ln460_3_fu_1166_p3 <= (ap_const_lv1_0 & x_is_inf_fu_1148_p2);
    or_ln467_s_fu_1180_p3 <= (ap_const_lv1_0 & x_is_0_reg_1591_pp0_iter12_reg);
    out_exp_V_fu_1315_p2 <= std_logic_vector(unsigned(trunc_ln186_fu_1311_p1) + unsigned(ap_const_lv8_7F));
    p_Result_11_fu_355_p3 <= data_V_fu_351_p1(31 downto 31);
    p_Result_12_fu_437_p1 <= data_V_fu_351_p1(23 - 1 downto 0);
    p_Result_13_fu_471_p4 <= ((ap_const_lv1_1 & p_Result_12_reg_1601) & ap_const_lv1_0);
    p_Result_15_fu_1321_p4 <= ((ap_const_lv1_0 & out_exp_V_fu_1315_p2) & tmp_12_fu_1303_p3);
    p_Result_6_fu_996_p3 <= grp_fu_1542_p3(24 downto 24);
    p_Result_7_fu_1236_p3 <= ret_V_13_fu_1224_p2(43 downto 43);
    p_Result_s_fu_429_p3 <= data_V_fu_351_p1(22 downto 22);
    pow_reduce_anonymous_namespace_log0_lut_table_array_V_address0 <= zext_ln541_fu_465_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log0_lut_table_array_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            pow_reduce_anonymous_namespace_log0_lut_table_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log0_lut_table_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_address0 <= zext_ln541_fu_465_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_V_address0 <= zext_ln541_3_fu_749_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_V_address0 <= zext_ln541_1_fu_610_p1(4 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_V_address0 <= zext_ln541_2_fu_715_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_V_address0 <= zext_ln541_4_fu_1073_p1(9 - 1 downto 0);

    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_V_address0 <= zext_ln541_5_fu_1088_p1(5 - 1 downto 0);

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    r_V_10_fu_677_p0 <= r_V_10_fu_677_p00(6 - 1 downto 0);
    r_V_10_fu_677_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_V_1_reg_1648),47));
    r_V_10_fu_677_p1 <= r_V_10_fu_677_p10(41 - 1 downto 0);
    r_V_10_fu_677_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z2_V_reg_1637),47));
    r_V_11_fu_743_p0 <= r_V_11_fu_743_p00(6 - 1 downto 0);
    r_V_11_fu_743_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_V_2_fu_719_p4),50));
    r_V_11_fu_743_p1 <= r_V_11_fu_743_p10(44 - 1 downto 0);
    r_V_11_fu_743_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z3_V_fu_701_p4),50));
    r_V_12_fu_860_p0 <= zext_ln1270_1_fu_856_p1(23 - 1 downto 0);
    r_V_12_fu_860_p1 <= zext_ln1270_1_fu_856_p1(23 - 1 downto 0);
    r_V_8_fu_480_p3 <= (ap_const_lv1_1 & p_Result_12_reg_1601);
    r_V_9_fu_584_p0 <= r_V_9_fu_584_p00(39 - 1 downto 0);
    r_V_9_fu_584_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z1_V_fu_502_p3),43));
    r_V_9_fu_584_p1 <= r_V_9_fu_584_p10(4 - 1 downto 0);
    r_V_9_fu_584_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_V_fu_509_p4),43));
    r_exp_V_2_fu_1249_p3 <= 
        ret_V_18_reg_1715_pp0_iter12_reg when (p_Result_7_fu_1236_p3(0) = '1') else 
        r_exp_V_fu_1244_p2;
    r_exp_V_fu_1244_p2 <= std_logic_vector(signed(ret_V_18_reg_1715_pp0_iter12_reg) + signed(ap_const_lv10_3FF));
    ret_V_11_fu_1100_p2 <= std_logic_vector(unsigned(zext_ln813_3_fu_1093_p1) + unsigned(zext_ln813_4_fu_1096_p1));
    ret_V_13_fu_1224_p2 <= std_logic_vector(unsigned(lhs_V_6_fu_1198_p3) + unsigned(zext_ln1347_3_fu_1206_p1));
    ret_V_14_fu_570_p2 <= std_logic_vector(unsigned(eZ_fu_550_p3) + unsigned(zext_ln1347_fu_566_p1));
    ret_V_15_fu_665_p2 <= std_logic_vector(unsigned(zext_ln813_fu_661_p1) + unsigned(zext_ln1347_1_fu_657_p1));
    ret_V_16_fu_794_p2 <= std_logic_vector(unsigned(zext_ln1347_2_fu_786_p1) + unsigned(zext_ln813_1_fu_790_p1));
    ret_V_18_fu_1026_p3 <= 
        select_ln1002_fu_1018_p3 when (p_Result_6_fu_996_p3(0) = '1') else 
        trunc_ln_fu_987_p4;
    ret_V_19_fu_1193_p2 <= std_logic_vector(unsigned(exp_Z1_V_reg_1736_pp0_iter12_reg) + unsigned(ap_const_lv27_4));
    ret_V_3_fu_695_p2 <= std_logic_vector(unsigned(ret_V_15_fu_665_p2) - unsigned(zext_ln1348_1_fu_691_p1));
    ret_V_5_fu_811_p2 <= std_logic_vector(unsigned(ret_V_16_fu_794_p2) - unsigned(zext_ln1348_2_fu_807_p1));
    ret_V_6_fu_892_p2 <= std_logic_vector(unsigned(zext_ln1348_3_fu_884_p1) - unsigned(zext_ln1348_4_fu_888_p1));
    ret_V_7_fu_930_p2 <= std_logic_vector(signed(sext_ln1347_1_fu_926_p1) + signed(lhs_V_2_fu_908_p3));
    ret_V_9_fu_1012_p2 <= std_logic_vector(unsigned(trunc_ln_fu_987_p4) + unsigned(ap_const_lv10_1));
    ret_V_fu_594_p2 <= std_logic_vector(unsigned(ret_V_14_fu_570_p2) - unsigned(zext_ln1348_fu_590_p1));
    rhs_4_fu_683_p3 <= (r_V_10_fu_677_p2 & ap_const_lv1_0);
    rhs_7_fu_800_p3 <= (r_V_11_reg_1674 & ap_const_lv6_0);
    rhs_8_fu_866_p4 <= r_V_12_fu_860_p2(45 downto 1);
    rhs_9_fu_976_p3 <= (p_Result_14_reg_1689_pp0_iter7_reg & ap_const_lv15_4000);
    select_ln1002_fu_1018_p3 <= 
        trunc_ln_fu_987_p4 when (icmp_ln1003_fu_1006_p2(0) = '1') else 
        ret_V_9_fu_1012_p2;
    select_ln1039_1_fu_1448_p3 <= 
        ap_const_lv32_7F800000 when (and_ln460_fu_1371_p2(0) = '1') else 
        ap_const_lv32_3F800000;
    select_ln1039_2_fu_1476_p3 <= 
        select_ln1039_fu_1462_p3 when (or_ln1039_4_fu_1470_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln1039_3_fu_1490_p3 <= 
        select_ln1039_1_fu_1448_p3 when (or_ln1039_2_fu_1456_p2(0) = '1') else 
        p_Result_15_fu_1321_p4;
    select_ln1039_4_fu_1498_p3 <= 
        select_ln1039_2_fu_1476_p3 when (or_ln1039_3_fu_1484_p2(0) = '1') else 
        select_ln1039_3_fu_1490_p3;
    select_ln1039_fu_1462_p3 <= 
        ap_const_lv32_0 when (or_ln1039_fu_1436_p2(0) = '1') else 
        ap_const_lv32_7F800000;
    select_ln407_fu_1510_p3 <= 
        ap_const_lv32_3F800000 when (x_is_p1_reg_1579_pp0_iter12_reg(0) = '1') else 
        bitcast_ln1039_fu_1506_p1;
        sext_ln1347_1_fu_926_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1347_fu_920_p2),64));

        sext_ln1347_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_fu_898_p4),56));

    tmp_12_fu_1303_p3 <= 
        tmp_fu_1283_p4 when (p_Result_7_fu_1236_p3(0) = '1') else 
        tmp_4_fu_1293_p4;
    tmp_27_fu_836_p4 <= ret_V_5_fu_811_p2(62 downto 24);
    tmp_28_fu_846_p4 <= ret_V_5_fu_811_p2(62 downto 40);
    tmp_4_fu_1293_p4 <= add_ln1347_6_fu_1230_p2(41 downto 19);
    tmp_5_fu_521_p3 <= grp_fu_1530_p2(24 downto 24);
    tmp_9_fu_1256_p4 <= r_exp_V_2_fu_1249_p3(9 downto 7);
    tmp_fu_1283_p4 <= ret_V_13_fu_1224_p2(42 downto 20);
    tmp_s_fu_537_p4 <= ((ap_const_lv5_10 & grp_fu_1530_p2) & ap_const_lv14_0);
    trunc_ln1003_fu_1003_p1 <= grp_fu_1542_p3(15 - 1 downto 0);
    trunc_ln1347_1_fu_1213_p3 <= (trunc_ln1347_fu_1209_p1 & ap_const_lv17_0);
    trunc_ln1347_fu_1209_p1 <= ret_V_19_fu_1193_p2(25 - 1 downto 0);
    trunc_ln186_fu_1311_p1 <= r_exp_V_2_fu_1249_p3(8 - 1 downto 0);
    trunc_ln1_fu_898_p4 <= ret_V_6_fu_892_p2(63 downto 24);
    trunc_ln813_1_fu_1044_p4 <= mul_ln1270_1_fu_1038_p2(35 downto 9);
    trunc_ln813_fu_518_p1 <= grp_fu_1530_p2(21 - 1 downto 0);
    trunc_ln_fu_987_p4 <= grp_fu_1542_p3(24 downto 15);
    x_is_0_fu_423_p2 <= "1" when (bs_exp_V_fu_363_p4 = ap_const_lv8_0) else "0";
    x_is_1_fu_399_p2 <= (icmp_ln369_fu_387_p2 and icmp_ln1019_fu_393_p2);
    x_is_NaN_fu_1143_p2 <= (xor_ln1023_fu_1138_p2 and icmp_ln1019_1_reg_1585_pp0_iter12_reg);
    x_is_inf_fu_1148_p2 <= (icmp_ln1019_reg_1567_pp0_iter12_reg and icmp_ln1019_1_reg_1585_pp0_iter12_reg);
    x_is_n1_fu_1134_p2 <= (x_is_1_reg_1573_pp0_iter12_reg and p_Result_11_reg_1561_pp0_iter12_reg);
    x_is_p1_fu_411_p2 <= (xor_ln970_fu_405_p2 and x_is_1_fu_399_p2);
    xor_ln1023_fu_1138_p2 <= (icmp_ln1019_reg_1567_pp0_iter12_reg xor ap_const_lv1_1);
    xor_ln182_fu_1272_p2 <= (tmp_10_reg_1704_pp0_iter12_reg xor ap_const_lv1_1);
    xor_ln371_fu_1353_p2 <= (x_is_n1_fu_1134_p2 xor ap_const_lv1_1);
    xor_ln407_1_fu_1331_p2 <= (x_is_1_reg_1573_pp0_iter12_reg xor ap_const_lv1_1);
    xor_ln460_fu_1365_p2 <= (icmp_ln460_fu_1174_p2 xor ap_const_lv1_1);
    xor_ln467_fu_1383_p2 <= (icmp_ln467_fu_1187_p2 xor ap_const_lv1_1);
    xor_ln657_fu_1418_p2 <= (icmp_ln1035_fu_1266_p2 xor ap_const_lv1_1);
    xor_ln970_fu_405_p2 <= (p_Result_11_fu_355_p3 xor ap_const_lv1_1);
    z1_V_fu_502_p3 <= (grp_fu_1530_p2 & ap_const_lv14_0);
    z3_V_fu_701_p4 <= ret_V_3_fu_695_p2(49 downto 6);
    zext_ln1270_1_fu_856_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_fu_846_p4),46));
    zext_ln1347_1_fu_657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_2_fu_650_p3),50));
    zext_ln1347_2_fu_786_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_4_fu_779_p3),63));
    zext_ln1347_3_fu_1206_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1553_p2),44));
    zext_ln1347_4_fu_1221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1553_p2),42));
    zext_ln1347_fu_566_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_fu_558_p3),44));
    zext_ln1348_1_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_4_fu_683_p3),50));
    zext_ln1348_2_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_7_fu_800_p3),63));
    zext_ln1348_3_fu_884_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_fu_876_p3),64));
    zext_ln1348_4_fu_888_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_8_fu_866_p4),64));
    zext_ln1348_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_9_fu_584_p2),44));
    zext_ln1488_1_fu_546_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1488_2_cast_fu_528_p4),44));
    zext_ln1488_2_cast_fu_528_p4 <= ((ap_const_lv5_10 & grp_fu_1530_p2) & ap_const_lv13_0);
    zext_ln1488_fu_487_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_8_fu_480_p3),25));
    zext_ln163_1_fu_817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_V_q0),50));
    zext_ln163_fu_768_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_V_q0),50));
    zext_ln346_fu_377_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bs_exp_V_fu_363_p4),9));
    zext_ln541_1_fu_610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_V_fu_509_p4),64));
    zext_ln541_2_fu_715_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_V_1_reg_1648),64));
    zext_ln541_3_fu_749_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_V_2_fu_719_p4),64));
    zext_ln541_4_fu_1073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_hi_V_fu_1059_p4),64));
    zext_ln541_5_fu_1088_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z2_ind_fu_1078_p4),64));
    zext_ln541_fu_465_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index0_V_fu_441_p4),64));
    zext_ln813_1_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(eZ_2_fu_772_p3),63));
    zext_ln813_2_fu_827_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln813_1_fu_821_p2),56));
    zext_ln813_3_fu_1093_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_lo_V_reg_1721),19));
    zext_ln813_4_fu_1096_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_V_q0),19));
    zext_ln813_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(eZ_1_fu_642_p3),50));
    zext_ln818_1_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z3_V_fu_701_p4),50));
    zext_ln818_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z2_V_reg_1637),44));
end behav;
